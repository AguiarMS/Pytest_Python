pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git url: 'YOUR_REPOSITORY_URL', branch: 'YOUR_BRANCH'
            }
        }

        stage('Setup Virtual Environment') {
            steps {
                script {
                    // Create and activate a virtual environment
                    sh 'python3 -m venv venv'
                    sh '. venv/bin/activate'
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    // Activate virtual environment and install dependencies
                    sh '. venv/bin/activate && pip install -r requirements.txt'
                }
            }
        }

        stage('Run Pytest Tests') {
            steps {
                script {
                    // Activate virtual environment and run pytest
                    // --junitxml generates a JUnit-style report for Jenkins to parse
                    sh '. venv/bin/activate && pytest --junitxml=test-results.xml'
                }
            }
        }
    }

    post {
        always {
            // Publish JUnit test results for Jenkins to display
            junit 'test-results.xml'
            // Clean up virtual environment (optional)
            sh 'rm -rf venv'
        }
    }
}